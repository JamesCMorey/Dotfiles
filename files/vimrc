call plug#begin()

Plug 'preservim/nerdtree'
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'junegunn/fzf.vim'
Plug 'vimwiki/vimwiki'
Plug 'preservim/vim-markdown'
Plug 'vim/colorschemes'
"Plug 'bling/vim-bufferline'
Plug 'bfrg/vim-cpp-modern'
Plug 'aklt/plantuml-syntax'
Plug 'tyru/open-browser.vim'
Plug 'weirongxu/plantuml-previewer.vim'

call plug#end()

let g:vimwiki_list = [{'path': '~/archive', 'syntax': 'markdown', 'ext': '.md'}]

syntax on
set t_Co=256
colorscheme habamax
set cursorline
set nu rnu
set ruler
set incsearch
set nowrap

set tags+=./tags;/
set nocompatible

set enc=utf-8
set fenc=utf-8
set termencoding=utf-8

autocmd FileType * set nocindent
hi! link TODO Boolean
set smartindent
set tabstop=8
set shiftwidth=8

"set textwidth=80
"set colorcolumn=81
set textwidth=80
set colorcolumn=81
set sw=8 ts=8

set spell
set tabpagemax=20

let mapleader = ' '

" Window Navigation
nnoremap <leader>g <C-W>w

" Buffer Navigation
nnoremap <leader>gb :w<CR>:Buffers<CR>
nnoremap <leader>n :w<CR>:bn<CR>
nnoremap <leader>p :w<CR>:bp<CR>
nnoremap <leader>d :w<CR>:bd<CR>
nnoremap <leader>b :w<CR>:ls<CR>:b<space>
" close all buffers except the current one
nnoremap <leader>c :%bd\|e#\|bd#<CR>

" Misc Remaps
nnoremap <leader>f :w<CR>:Files<CR>
nnoremap <leader>s :source ~/.vimrc<CR>
inoremap {<CR> {<CR>}<esc>O
inoremap kj <ESC>
nnoremap <CR> i<CR>

set backup
set backupdir=~/.vim/backup//

set undofile
set undodir=~/.vim/undodir//

set directory=~/.vim/swp//

" delete trailing white space upon write
autocmd BufWritePre * :%s/\s\+$//e
